class Solution {
    public int lengthOfLongestSubstring(String s) {
        char[] ss = s.toCharArray();
        int n = ss.length;
        if (n == 0) { 
            return 0;
        }
        Map<Character, Integer> map = new HashMap<>();
        int i = 0, j = 0, res = 0;
        while (i < n) {
            if (map.containsKey(ss[i])) {
                map.remove(ss[j++]);
            } else {
                map.put(ss[i], i);
                i++;
            }
            res = Math.max(res, i - j);
        }
        return res;
    }
}
//runtime:7 ms
//memory:43.2 MB
